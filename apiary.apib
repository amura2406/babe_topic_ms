FORMAT: 1A
HOST: http://localhost:9000/topic/v1

# BABE Topic Microservice

Topic Microservice main goal is to classify a content into topics.
 
Topic classification has many cluster type, such as **topic-128**, **topic-256**, etc.

Each of the cluster type has it's own configuration/mappings file, which should be loaded into `singleton` object at runtime.
 
It should encapsulates all underlying storage & cache and provide convenient interface for content client.

# Group Topic

## Topic Classification [/classify/{artId}]

+ Parameters
    + artId (number, required) - Article ID

### Classify by Article ID [POST]

Classify an article's body into topics.

**NB:**

- If `artId` is not found, simply return **HTTP 404**.
- If supplied `cluster_type` field is empty, then return **HTTP 400**.
 
+ Request (application/json)
    + Attributes (TopicRequest)
 
+ Response 200 (application/json)
    + Attributes (TopicResponse)
        
+ Response 404 (application/json)
    Return when `artId` is not found
    
    + Attributes (DefaultError404)
        
+ Response 503 (application/json)
    Return when server has internal error and can't continue fulfilling the request

    + Attributes (DefaultError503)


### Classify by Content [POST /classify]

Classify a string content into topics.

**NB:**

- If supplied `cluster_type` field is empty, then return **HTTP 400**.

+ Request (application/json)
    + Attributes (TopicRequest)
        + body: `Lorem Ipsum ...` (string, required) - The string to be classify.
 
+ Response 200 (application/json)
    + Attributes (TopicResponse)

+ Response 400 (application/json)
    Return when parameters requirement not met correctly
    
    + Attributes (DefaultError400)
        
+ Response 503 (application/json)
    Return when server has internal error and can't continue fulfilling the request

    + Attributes (DefaultError503)





# Data Structures

## TopicResponse (object)
+ `topic-128` (array[Topic], optional) - Topic indices on 128 cluster.
+ `topic-256` (array[Topic], optional) - Topic indices on 256 cluster.
+ `topic-512` (array[Topic], optional) - Topic indices on 512 cluster.
+ `tuotiao-topic-128` (array[Topic], optional) - Tuotiao topic indices on 128 cluster.
+ `tuotiao-topic-512` (array[Topic], optional) - Tuotiao topic indices on 512 cluster.

## Topic (object)
+ id: `11` (number, required) - Topic ID
+ score: `0.91` (number, required) - Topic Score

## TopicRequest (object)
+ cluster_type (array[string], required) - The type of classification.
    + Members
        + `topic-128`
        + `topic-256`
        + `topic-512`
        + `tuotiao-topic-128`
        + `tuotiao-topic-512`
+ max: `5` (number, optional) - Number of classification returned, default to 1.

## Error (object)
+ errCode (number) - Error Code
+ errMsg (string) - Error Message

## DefaultError400 (Error)
+ errCode: `-1`
+ errMsg: Invalid Request

## DefaultError401 (Error)
+ errCode: `-2`
+ errMsg: Authorization needed to access resource

## DefaultError404 (Error)
+ errCode: `-5`
+ errMsg: Resource not found

## DefaultError413 (Error)
+ errCode: `-14`
+ errMsg: Request Entity Too Large

## DefaultError503 (Error)
+ errCode: `-10`
+ errMsg: Backend service is down